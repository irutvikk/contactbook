import 'dart:io';import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:registerlogin/dbhelper.dart';import 'package:registerlogin/main.dart';import 'package:sqflite/sqflite.dart';class signuppage extends StatefulWidget {  const signuppage({super.key});  @override  State<signuppage> createState() => _signuppageState();}class _signuppageState extends State<signuppage> {  Database? db;  Icon visiblepass = Icon(    Icons.visibility_rounded,    color: Colors.pinkAccent,  );  Icon hidepass = Icon(    Icons.visibility_off_rounded,    color: Colors.pinkAccent,  );  bool hidepassword = true;  String gender = "";  bool playing = false;  bool reading = false;  bool travelling = false;  bool writing = false;  bool cooking = false;  String selectededucation = "Choose";  List education = [    "Choose",    "10th",    "12th",    "BCA",    "MCA",    "BBA",    "MBA",    "BCOM",    "MCOM",    "LLB",    "BMS",    "CA",    "CS",    "CWA",    "Bsc",    "Msc",    "BPharma",    "BE",    "CFP",    "B Tech",    "M Tech"  ];  TextEditingController username = TextEditingController();  TextEditingController password = TextEditingController();  TextEditingController phone = TextEditingController();  bool usernametext = false;  bool passwordtext = false;  bool phonetext = false;  String? usernameerror;  String? passworderror;  String? phoneerror;  @override  void initState() {    super.initState();    dbhelper().getdatabase().then((value) {      setState(() {        db = value;      });    });  }  Future<bool> closetheapp() {    showDialog(      context: context,      builder: (context) {        return AlertDialog(          title: Text(            "Close App?",            style: TextStyle(fontSize: 18, letterSpacing: 1),          ),          actions: [            TextButton(                onPressed: () {                  exit(0);                },                child: Text(                  "YES",                  style: TextStyle(fontSize: 18, letterSpacing: 1),                )),            TextButton(                onPressed: () {                  Navigator.pop(context);                },                child: Text("NO",                    style: TextStyle(fontSize: 18, letterSpacing: 1)))          ],        );      },    );    return Future.value(true);  }  @override  Widget build(BuildContext context) {    double fullhight = MediaQuery.of(context).size.height;    double fullwidth = MediaQuery.of(context).size.width;    return WillPopScope(      child: Scaffold(        resizeToAvoidBottomInset: false,        body: SingleChildScrollView(          physics: ScrollPhysics(),          child: Column(            children: [              SizedBox(                height: fullhight * .09,              ),              Container(                alignment: Alignment.centerLeft,                margin: EdgeInsets.only(left: 20),                child: Text(                  "Create Account,",                  style: TextStyle(fontSize: 28, fontWeight: FontWeight.bold),                ),              ),              SizedBox(height: fullhight * .01),              Container(                alignment: Alignment.centerLeft,                margin: EdgeInsets.only(left: 20),                child: Text(                  "Sign Up to get started!",                  style: TextStyle(                      fontSize: 21,                      color: Colors.grey.shade500,                      fontWeight: FontWeight.w400),                ),              ),              SizedBox(height: fullhight * .015),              Container(                margin: EdgeInsets.only(left: 20, right: 20),                child: TextField(                  controller: username,                  autofocus: false,                  decoration: InputDecoration(                    labelText: "Enter Username",                    errorText: usernametext ? usernameerror : null,                    focusedBorder: OutlineInputBorder(                      borderRadius: BorderRadius.circular(15),                      borderSide: BorderSide(color: Colors.pinkAccent),                    ),                    enabledBorder: OutlineInputBorder(                      borderSide: BorderSide(color: Colors.grey.shade300),                      borderRadius: BorderRadius.circular(15),                    ),                    border: OutlineInputBorder(                      borderSide: BorderSide(color: Colors.grey.shade300),                      borderRadius: BorderRadius.circular(15),                    ),                  ),                ),              ),              SizedBox(                height: fullhight * .01,              ),              Container(                margin: EdgeInsets.only(left: 20, right: 20),                child: TextField(                  obscureText: hidepassword,                  controller: password,                  autofocus: false,                  decoration: InputDecoration(                    suffixIcon: IconButton(                        onPressed: () {                          setState(() {                            if (hidepassword == true) {                              hidepassword = false;                            } else {                              hidepassword = true;                            }                          });                        },                        icon: hidepassword == true ? visiblepass : hidepass),                    labelText: "Enter Password",                    errorText: passwordtext ? passworderror : null,                    focusedBorder: OutlineInputBorder(                      borderRadius: BorderRadius.circular(15),                      borderSide: BorderSide(color: Colors.pinkAccent),                    ),                    enabledBorder: OutlineInputBorder(                      borderSide: BorderSide(color: Colors.grey.shade300),                      borderRadius: BorderRadius.circular(15),                    ),                    border: OutlineInputBorder(                      borderSide: BorderSide(color: Colors.grey.shade300),                      borderRadius: BorderRadius.circular(15),                    ),                  ),                ),              ),              SizedBox(                height: fullhight * .01,              ),              Container(                margin: EdgeInsets.only(left: 20, right: 20),                child: TextField(                  controller: phone,                  inputFormatters: [FilteringTextInputFormatter.digitsOnly],                  keyboardType: TextInputType.number,                  autofocus: false,                  decoration: InputDecoration(                    labelText: "Enter Phone Number",                    errorText: phonetext ? phoneerror : null,                    focusedBorder: OutlineInputBorder(                      borderRadius: BorderRadius.circular(15),                      borderSide: BorderSide(color: Colors.pinkAccent),                    ),                    enabledBorder: OutlineInputBorder(                      borderSide: BorderSide(color: Colors.grey.shade300),                      borderRadius: BorderRadius.circular(15),                    ),                    border: OutlineInputBorder(                      borderSide: BorderSide(color: Colors.grey.shade300),                      borderRadius: BorderRadius.circular(15),                    ),                  ),                ),              ),              SizedBox(                height: fullhight * .01,              ),              Container(                alignment: Alignment.centerRight,                margin: EdgeInsets.only(right: 15),                child: TextButton(                  onPressed: () {                    //                  },                  child: Text(                    "Forgot Passowrd?",                    style: TextStyle(color: Colors.black),                  ),                ),              ),              Container(                margin: EdgeInsets.only(left: fullhight * 0.02),                alignment: Alignment.centerLeft,                child: Text(                  "Gender : ",                  style: TextStyle(                      fontSize: fullhight * 0.025, fontWeight: FontWeight.bold),                ),              ),              Container(                margin: EdgeInsets.only(left: fullwidth * 0.03),                child: Row(                  children: [                    Radio(                      activeColor: Colors.pinkAccent,                      value: "Male",                      groupValue: gender,                      onChanged: (value) {                        setState(() {                          gender = value!;                          print(gender);                        });                      },                    ),                    Text(                      "Male",                      style: TextStyle(fontSize: fullhight * 0.020),                    ),                    Radio(                      activeColor: Colors.pinkAccent,                      value: "Female",                      groupValue: gender,                      onChanged: (value) {                        setState(() {                          gender = value!;                          print(gender);                        });                      },                    ),                    Text(                      "Female",                      style: TextStyle(fontSize: fullhight * 0.020),                    ),                  ],                ),              ),              Row(                children: [                  Container(                    margin: EdgeInsets.only(left: fullhight * 0.02),                    alignment: Alignment.centerLeft,                    child: Text(                      "Qualification : ",                      style: TextStyle(                          fontSize: fullhight * 0.025,                          fontWeight: FontWeight.bold),                    ),                  ),                  Container(                    alignment: Alignment.center,                    width: 100,                    decoration: BoxDecoration(                        borderRadius: BorderRadius.circular(10),                        color: Colors.grey.shade200),                    margin: EdgeInsets.only(left: fullhight * .02),                    child: DropdownButton(                      alignment: Alignment.center,                      underline: Container(),                      value: selectededucation,                      items: education.map((var education) {                        return DropdownMenuItem(                          child: Text("$education"),                          value: education,                        );                      }).toList(),                      onChanged: (value) {                        setState(                          () {                            selectededucation = "$value";                            print(selectededucation);                          },                        );                      },                    ),                  )                ],              ),              SizedBox(                height: fullhight * .01,              ),              Container(                margin: EdgeInsets.only(left: fullhight * 0.02),                alignment: Alignment.centerLeft,                child: Text(                  "Hobbies : ",                  style: TextStyle(                      fontSize: fullhight * 0.025, fontWeight: FontWeight.bold),                ),              ),              SizedBox(                height: fullhight * .01,              ),              Wrap(                alignment: WrapAlignment.start,                children: [                  Container(                    margin: EdgeInsets.only(left: fullwidth * .005),                    width: 120,                    child: Row(                      children: [                        Transform.scale(                          scale: 1.3,                          child: Checkbox(                            side: BorderSide(strokeAlign: StrokeAlign.inside),                            // shape: CircleBorder(),                            checkColor: Colors.pinkAccent,                            activeColor: Colors.transparent,                            value: playing,                            onChanged: (value) {                              setState(                                () {                                  playing = value!;                                  print("Playing=$playing");                                },                              );                            },                          ),                        ),                        Text(                          "Playing",                          style: TextStyle(fontSize: fullhight * 0.020),                        )                      ],                    ),                  ),                  Container(                    margin: EdgeInsets.only(left: fullwidth * .005),                    width: 120,                    child: Row(                      children: [                        Transform.scale(                          scale: 1.3,                          child: Checkbox(                            side: BorderSide(strokeAlign: StrokeAlign.inside),                            //shape: CircleBorder(),                            checkColor: Colors.pinkAccent,                            activeColor: Colors.transparent,                            value: reading,                            onChanged: (value) {                              setState(                                () {                                  reading = value!;                                  print("Reading=$reading");                                },                              );                            },                          ),                        ),                        Text(                          "Reading",                          style: TextStyle(fontSize: fullhight * 0.020),                        )                      ],                    ),                  ),                  Container(                    margin: EdgeInsets.only(left: fullwidth * .005),                    width: 120,                    child: Row(                      children: [                        Transform.scale(                          scale: 1.3,                          child: Checkbox(                            side: BorderSide(strokeAlign: StrokeAlign.inside),                            //shape: CircleBorder(),                            checkColor: Colors.pinkAccent,                            activeColor: Colors.transparent,                            value: travelling,                            onChanged: (value) {                              setState(                                () {                                  travelling = value!;                                  print("Travelling=$travelling");                                },                              );                            },                          ),                        ),                        Text(                          "Travelling",                          style: TextStyle(fontSize: fullhight * 0.020),                        )                      ],                    ),                  ),                  Container(                    margin: EdgeInsets.only(left: fullwidth * .005),                    width: 120,                    child: Row(                      children: [                        Transform.scale(                          scale: 1.3,                          child: Checkbox(                            side: BorderSide(strokeAlign: StrokeAlign.inside),                            //shape: CircleBorder(),                            checkColor: Colors.pinkAccent,                            activeColor: Colors.transparent,                            value: writing,                            onChanged: (value) {                              setState(                                () {                                  writing = value!;                                  print("Writing=$writing");                                },                              );                            },                          ),                        ),                        Text(                          "Writing",                          style: TextStyle(fontSize: fullhight * 0.020),                        )                      ],                    ),                  ),                  Container(                    margin: EdgeInsets.only(left: fullwidth * .005),                    width: 120,                    child: Row(                      children: [                        Transform.scale(                          scale: 1.3,                          child: Checkbox(                            side: BorderSide(strokeAlign: StrokeAlign.inside),                            //shape: CircleBorder(),                            checkColor: Colors.pinkAccent,                            activeColor: Colors.transparent,                            value: cooking,                            onChanged: (value) {                              setState(                                () {                                  cooking = value!;                                  print("Cooking=$cooking");                                },                              );                            },                          ),                        ),                        Text(                          "Cooking",                          style: TextStyle(fontSize: fullhight * 0.020),                        )                      ],                    ),                  ),                ],              ),              SizedBox(                height: fullhight * .01,              ),              Container(                decoration: BoxDecoration(                  borderRadius: BorderRadius.circular(15),                ),                height: fullhight * 0.065,                width: fullwidth,                margin: EdgeInsets.only(left: 15, right: 15),                child: ElevatedButton(                  style: ButtonStyle(                    splashFactory: NoSplash.splashFactory,                    backgroundColor:                        MaterialStatePropertyAll(Colors.pinkAccent.shade200),                    shape: MaterialStatePropertyAll(                      RoundedRectangleBorder(                        borderRadius: BorderRadius.circular(15),                      ),                    ),                  ),                  onPressed: () {                    RegExp nameRegExpusername =                        RegExp(r'^[A-Za-z][A-Za-z0-9_]{7,29}$');                    RegExp nameRegExppassword = RegExp(                        r'^(?=.{4,12})(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$');                    String usernamee = username.text;                    String passwordd = password.text;                    String phoneno = phone.text;                    usernametext = false;                    passwordtext = false;                    phonetext = false;                    setState(                      () {                        if (usernamee.isEmpty &&                            passwordd.isEmpty &&                            phoneno.isEmpty) {                          usernametext = true;                          usernameerror = "Enter Username";                          passwordtext = true;                          passworderror = "Enter Password";                          phonetext = true;                          phoneerror = "Enter Phone Number";                        } else if (usernamee.isEmpty) {                          usernametext = true;                          usernameerror = "Enter Username";                        } else if (passwordd.isEmpty) {                          passwordtext = true;                          passworderror = "Enter Password";                        } else if (phoneno.isEmpty) {                          phonetext = true;                          phoneerror = "Enter Phone Number";                        } else if (!nameRegExpusername.hasMatch(usernamee)) {                          usernametext = true;                          usernameerror = "Enter Valid Username";                        } else if (!nameRegExppassword.hasMatch(passwordd)) {                          passwordtext = true;                          passworderror = "Enter Valid Password";                        } else if (usernamee == passwordd) {                          passwordtext = true;                          passworderror = "Name and Password can't be same";                          password.text = "";                        } else {                          FocusManager.instance.primaryFocus?.unfocus();                          print("Password is Perfect");                          dbhelper().checkuserdata(usernamee, db!).then(                            (value) {                              if (!value) {                                dbhelper().insertdata(                                    usernamee,                                    passwordd,                                    phoneno,                                    gender,                                    selectededucation,                                    playing,                                    reading,                                    travelling,                                    writing,                                    cooking,                                    db!);                                ScaffoldMessenger.of(context).showSnackBar(                                  SnackBar(                                    backgroundColor: Colors.pinkAccent,                                    content: Text(                                      "Signed Up Successfully",                                      style: TextStyle(                                          color: Colors.white, fontSize: 18),                                    ),                                  ),                                );                                //navigate to login page after registration successfull                                Navigator.pushReplacement(                                  context,                                  MaterialPageRoute(                                    builder: (context) {                                      return loginpage();                                    },                                  ),                                );                              } else {                                usernametext = true;                                usernameerror = "Username Already Taken";                                ScaffoldMessenger.of(context).showSnackBar(                                  SnackBar(                                    backgroundColor: Colors.pinkAccent,                                    content: Text(                                      "User Alredy Exist!",                                      style: TextStyle(                                          color: Colors.white, fontSize: 18),                                    ),                                  ),                                );                              }                            },                          );                        }                      },                    );                  },                  child: Text(                    "Signup",                    style: TextStyle(fontSize: 16),                  ),                ),              ),              SizedBox(                height: fullhight * .08,              ),              Container(                child: Row(                  mainAxisAlignment: MainAxisAlignment.center,                  children: [                    Text(                      "I'm already a member, ",                      style: TextStyle(color: Colors.black, fontSize: 16),                    ),                    InkWell(                        onTap: () {                          Navigator.pushReplacement(                            context,                            MaterialPageRoute(                              builder: (context) {                                return loginpage();                              },                            ),                          );                        },                        child: Text(                          "Sign In",                          style:                              TextStyle(color: Colors.pinkAccent, fontSize: 17),                        ))                  ],                ),              )            ],          ),        ),      ),      onWillPop: () {        return closetheapp();      },    );  }}